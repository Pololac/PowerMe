name: ci
on:
  pull_request:
    branches: ["main"] # Validation obligatoire avant merge
  push:
    branches: ["dev"] # Feedback sur ta branche principale de dev

jobs:
  front:
    name: Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: {
            node-version: 20,
            cache: "npm",
            cache-dependency-path: "frontend/package-lock.json",
          } # Optimise le temps de build

      - name: Install dependencies
        run: npm ci

      - name: Check code formatting (Prettier)
        run: npm run format:check

      - name: Check code with linter (ESLint)
        run: npm run lint

      - name: Run tests
        run: npm run test:ci

      - name: Build production
        run: npm run build:prod

      # Artefact pour déploiement (courte durée)
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/
          retention-days: 1

      # Artefact pour debug (durée moyenne)
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-coverage
          path: frontend/coverage/
          retention-days: 7

  back:
    name: Backend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with: { distribution: "temurin", java-version: "21" }

      - name: Setup cache
        uses: actions/cache@v4 # Optimise le temps de build
        with:
          path: |
            ~/.m2/repository
          key: m2-${{ runner.os }}-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            m2-${{ runner.os }}-

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Run tests and build
        run: ./mvnw -B clean package

      - name: Upload JAR
        uses: actions/upload-artifact@v4 #Upload des artifacts de test
        with:
          name: backend-jar
          path: backend/target/*.jar
          retention-days: 1

  # Protection -> uniquement "ci / all-checks"
  gate:
    name: all-checks
    runs-on: ubuntu-latest
    needs: [front, back]
    steps:
      - run: echo "✅ All CI checks passed"
